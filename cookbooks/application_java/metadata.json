{
  "name": "application_java",
  "version": "3.0.0",
  "description": "Deploys and configures Java-based applications",
  "long_description": "application_java Cookbook\n=========================\nThis cookbook is designed to be able to describe and deploy Java web applications. Currently supported:\n\n- Java\n- Tomcat\n\nNote that this cookbook provides the Java-specific bindings for the `application` cookbook; you will find general documentation in that cookbook.\n\nOther application stacks may be supported at a later date.\n\n\nRequirements\n------------\nChef 0.11.0 or higher required (for Chef environment use).\n\nThe following Opscode cookbooks are dependencies:\n\n- application\n- java\n- tomcat\n\n\nResources/Providers\n-------------------\nThe LWRPs provided by this cookbook are not meant to be used by themselves; make sure you are familiar with the `application` cookbook before proceeding.\n\n\n### `java_webapp`\nThe `java_webapp` sub-resource LWRP deals with deploying Java webapps delivered as WAR files which will either be retrieved from a remote URL or fetched by some other method and referenced locally.\n\nNOTICE: the `application` cookbook was designed around frameworks running on interpreted languages that are deployed in source code, checked out of an SCM using the `deploy_revision` resource. While this cookbook tries to map those concepts to a binary distribution mechanism, it may not map exactly.\n\n#### Attribute Parameters\n- database_master_role: if a role name is provided, a Chef search will be run to find a node with than role in the same environment as the current role. If a node is found, its IP address will be used when rendering the context file, but see the \"Database block parameters\" section below\n- context_template: the name of template that will be rendered to create the context file; if specified it will be looked up in the application cookbook. Defaults to \"context.xml.erb\" from this cookbook\n- database: a block containing additional parameters for configuring the database connection (see below)\n- war: if provided, will override the default of the basename of the repository\n\n#### Database block parameters\nThe database block can accept any method, with the following being expected by the stock context.xml.erb:\n\n- driver: a fully-qualified class name of the JDBC driver\n- host: hostname or IP address of the database server; if set it will take precedence over the address returned from the search for database_master_role\n- port: port to use to connect to the database server\n- database\n- username\n- password\n- max_active: used to set the maxActive context parameter\n- max_idle: used to set the maxIdle context parameter\n- max_wait: used to set the maxWait context parameter\n\nYou can invoke any other method on the database block, which will result in an entry being created in the `@database` Hash which is passed to the context template. See the examples below for more information.\n\n#### tomcat\nThe `tomcat` sub-resource LWRP configures Tomcat to run the application by creating a symbolic link to the context file.\n\n\nAttributes\n----------\n### scm_provider\nSupports all standard scm providers (git, svn), and in addition:\n*\tChef::Provider::RemoteFile::Deploy allows downloading from a remote url\n*\tChef::Provider::File::Deploy allows using a package on the filesystem\n\n### path\nThe target location for the application distribution. This should be outside of the tomcat deployment tree.\n\n### repository\nFor a git or svn repository, it is the repository URL\nWhen using Chef::Provider::RemoteFile::Deploy, it is the URL of the remote file\nWhen using Chef::Provider::File::Deploy, it is the path to the local file source\n\n### revision\nName of the path within releases, defaults to the checksum of the downloaded file\n\n\nUsage\n-----\nA sample application that needs a database connection:\n\n```ruby\napplication 'my-app' do\n  path         '/usr/local/my-app'\n  repository   '/nas/distro/my-app.war'\n  revision     '...'\n\tscm_provider Chef::Provider::File::Deploy\n\n  java_webapp do\n    database_master_role 'database_master'\n    database do\n      driver     'org.gjt.mm.mysql.Driver'\n      database   'name'\n      port       5678\n      username   'user'\n      password   'password'\n      max_active 1\n      max_idle   2\n      max_wait   3\n    end\n  end\n\n  tomcat\nend\n```\n\nIf your application does not need a database connection (or you need a custom context file for other reasons), you can specify your own template:\n\n```ruby\napplication 'jenkins' do\n  path         '/usr/local/jenkins'\n  owner        node['tomcat']['user']\n  group        node['tomcat']['group']\n  repository   'http://mirrors.jenkins-ci.org/war/latest/jenkins.war'\n  revision     '6facd94e958ecf68ffd28be371b5efcb5584c885b5f32a906e477f5f62bdb518-1'\n\tscm_provider Chef::Provider::RemoteFile::Deploy\n\n  java_webapp do\n    context_template 'jenkins-context.xml.erb'\n  end\n\n  tomcat\nend\n```\n\nYou can invoke any method on the database block:\n\n```ruby\napplication 'my-app' do\n  path       '/usr/local/my-app'\n  repository '...'\n  revision   '...'\n\n  java_webapp do\n    database_master_role 'database_master'\n    database do\n      database 'name'\n      quorum   2\n      replicas %w[Huey Dewey Louie]\n    end\n  end\nend\n```\n\nThe corresponding entries will be passed to the context template:\n\n```erb\n<Context docBase=\"<%= @war %>\" path=\"/\">\n  <!-- <%= @database['quorum'] %> -->\n  <!-- <%= @database['replicas'].join(',') %> -->\n</Context>\n```\n\nLicense & Authors\n-----------------\n- Author:: Adam Jacob (adam@opscode.com)\n- Author:: Andrea Campi (andrea.campi@zephirworks.com)\n- Author:: Jesse Campbell (hikeit@gmail.com)\n- Author:: Joshua Timberman (joshua@opscode.com)\n- Author:: Seth Chisamore (schisamo@opscode.com)\n\n```text\nCopyright 2009-2013, Opscode, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n",
  "maintainer": "ZephirWorks",
  "maintainer_email": "andrea.campi@zephirworks.com",
  "license": "Apache 2.0",
  "platforms": {
  },
  "dependencies": {
    "java": ">= 0.0.0",
    "tomcat": ">= 0.0.0",
    "application": "~> 3.0"
  },
  "recommendations": {
  },
  "suggestions": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "replacing": {
  },
  "attributes": {
  },
  "groupings": {
  },
  "recipes": {
  }
}